{"version":3,"file":"static/js/693.a76bec70.chunk.js","mappings":"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","sources":["components/BackLink.jsx","components/MovieData/MovieData.styled.jsx","components/MovieData/MovieData.jsx","pages/MovieDetails.jsx","services/Api.js","services/constans.js"],"sourcesContent":["import { HiArrowLeft } from 'react-icons/hi';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: blue;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"12\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst ContainerMovieData = styled.div`\n  padding: 10px 50px;\n`;\n\nconst Box = styled.div`\n  display: flex;\n  gap: 16px;\n  max-width: 1090px;\n  padding-bottom: 12px;\n  padding-left: 20px;\n  border: 2px solid #ccc8c8;\n  border-radius: 10px;\n`;\nconst Poster = styled.img`\n  width: 240px;\n  height: 320px;\n  border: 2px solid #fff;\n  border-radius: 14px;\n  box-shadow: 0px 4px 5px 0px rgba(0, 0, 0, 0.5);\n`;\n\nconst BoxDataMovie = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n  padding: 0 20px;\n`;\n\nconst ListGenres = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 10px;\n`;\nconst ListLink = styled.ul`\n  list-style: none;\n`;\nconst Title = styled.p`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-weight: 500;\n`;\nconst StyledLink = styled(NavLink)`\n  display: inline-block;\n  padding: 3px 10px;\n  margin-bottom: 10px;\n  box-shadow: 0px 4px 5px 0px rgba(0, 0, 0, 0.5);\n\n  border-radius: 10px;\n  color: #000000;\n  text-decoration: none;\n  text-align: center;\n  width: 80px;\n  :hover,\n  :focus {\n    color: #ffffff;\n    background-color: #a8a8ee;\n  }\n`;\nexport {\n  ContainerMovieData,\n  Box,\n  Poster,\n  BoxDataMovie,\n  ListGenres,\n  StyledLink,\n  Title,\n  ListLink,\n};\n","import {\n  ContainerMovieData,\n  Box,\n  Poster,\n  BoxDataMovie,\n  ListGenres,\n  StyledLink,\n  ListLink,\n  Title,\n} from './MovieData.styled';\nimport PropTypes from 'prop-types';\nimport { Outlet } from 'react-router-dom';\nimport { baseImgUrl } from 'services/constans';\n\nexport const MovieData = ({ url, tag, title, score, overview, genres }) => {\n  return (\n    <ContainerMovieData>\n      <Box>\n        <Poster src={baseImgUrl + url} alt={tag} />\n\n        <BoxDataMovie>\n          <h2>{title}</h2>\n          <p>User Score: {Math.round(score * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <ListGenres>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ListGenres>\n        </BoxDataMovie>\n      </Box>\n      <Title>Additional information</Title>\n      <ListLink>\n        <li>\n          <StyledLink to=\"cast\">Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n        </li>\n      </ListLink>\n      <Outlet />\n    </ContainerMovieData>\n  );\n};\n\nMovieData.propTypes = {\n  url: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n};\n","import { BackLink } from 'components/BackLink';\nimport { MovieData } from 'components/MovieData/MovieData';\nimport { useRef } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/Api';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const ref = useRef(location.state?.from ?? '/movies');\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function fetchMoviesById() {\n      try {\n        const data = await fetchMovieDetails(movieId);\n\n        setMovieDetails(data);\n      } catch {\n        console.log(Error);\n      }\n    }\n    fetchMoviesById();\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={ref.current}>Go back</BackLink>\n      {movieDetails && (\n        <MovieData\n          url={movieDetails.poster_path}\n          tag={movieDetails.title}\n          title={movieDetails.title}\n          score={movieDetails.vote_average}\n          overview={movieDetails.overview}\n          genres={movieDetails.genres}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '3cf4425b2b0aaed10ba0111b9a0340c9';\n\nexport const fetchTrendingMovies = async () => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n\n  return resp.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return resp.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const resp = await axios.get(`movie/${id}?api_key=${apiKey}&language=en-US`);\n\n  return resp.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const resp = await axios.get(\n    `movie/${id}/credits?api_key=${apiKey}&language=en-US`\n  );\n\n  return resp.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const resp = await axios.get(\n    `movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n\n  return resp.data.results;\n};\n","export const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n"],"names":["StyledLink","styled","NavLink","BackLink","to","children","size","ContainerMovieData","Box","Poster","BoxDataMovie","ListGenres","ListLink","Title","MovieData","url","tag","title","score","overview","genres","src","baseImgUrl","alt","Math","round","map","genre","name","id","useState","movieDetails","setMovieDetails","location","useLocation","ref","useRef","state","from","movieId","useParams","useEffect","fetchMovieDetails","data","console","log","Error","fetchMoviesById","current","poster_path","vote_average","axios","apiKey","fetchTrendingMovies","resp","results","fetchSearchMovie","query","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}