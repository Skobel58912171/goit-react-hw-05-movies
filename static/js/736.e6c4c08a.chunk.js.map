{"version":3,"file":"static/js/736.e6c4c08a.chunk.js","mappings":"gSAEMA,EAAWC,EAAAA,GAAAA,GAAH,iQAWRC,EAAWD,EAAAA,GAAAA,GAAH,+CAIRE,EAAUF,EAAAA,GAAAA,IAAH,+Q,SC6Bb,EApCa,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAEsBC,EAAAA,EAAAA,IAAkBH,GAFxC,OAESI,EAFT,OAIGL,EAAUK,GAJb,gDAMGC,QAAQC,IAAIC,OANf,wDAAD,EASD,GAAE,CAACP,KAEF,8BACGF,GAAYA,EAAOU,QAClB,SAACf,EAAD,UACGK,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAArB,OACV,UAACjB,EAAD,YACE,SAACC,EAAD,CACEiB,IAAKF,EAAeG,EAAAA,EAAaH,EAvB/C,+EAwBcI,IAAKH,KAEP,uBAAIA,MALSF,EADL,OAWd,kFAIP,C,mMC1CDM,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAmB,mCAAG,oGACdF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD1B,cAC3BE,EAD2B,yBAG1BA,EAAKf,KAAKgB,SAHgB,2CAAH,qDAMnBC,EAAgB,mCAAG,WAAMC,GAAN,uFACXN,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCK,EADtC,gCADW,cACxBH,EADwB,yBAKvBA,EAAKf,KAAKgB,SALa,2CAAH,sDAQhBG,EAAiB,mCAAG,WAAMb,GAAN,uFACZM,EAAAA,EAAAA,IAAA,gBAAmBN,EAAnB,oBAAiCO,EAAjC,oBADY,cACzBE,EADyB,yBAGxBA,EAAKf,MAHmB,2CAAH,sDAMjBD,EAAiB,mCAAG,WAAMO,GAAN,uFACZM,EAAAA,EAAAA,IAAA,gBACRN,EADQ,4BACcO,EADd,oBADY,cACzBE,EADyB,yBAKxBA,EAAKf,KAAKoB,MALc,2CAAH,sDAQjBC,EAAiB,mCAAG,WAAMf,GAAN,uFACZM,EAAAA,EAAAA,IAAA,gBACRN,EADQ,4BACcO,EADd,2BADY,cACzBE,EADyB,yBAKxBA,EAAKf,KAAKgB,SALc,2CAAH,qD,uDCjCvB,IAAMN,EAAa,iC","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/Api.js","services/constans.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst ListCast = styled.ul`\n  display: grid;\n  list-style: none;\n  max-width: 1140px;\n  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\n  column-gap: 10px;\n  gap: 20px;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst ItemCast = styled.li`\n  position: relative;\n`;\n\nconst Profile = styled.img`\n  width: 240px;\n  height: 320px;\n  border-radius: 14px;\n  box-shadow: 0px 4px 5px 0px rgba(0, 0, 0, 0.5);\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\nexport { ListCast, ItemCast, Profile };\n","// import PropTypes from 'prop-types';\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'services/Api';\nimport { baseImgUrl } from 'services/constans';\nimport { ListCast, ItemCast, Profile } from './Cast.styled';\n\nconst placeHolder =\n  'https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png';\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await fetchMovieCredits(movieId);\n\n        setActors(data);\n      } catch {\n        console.log(Error);\n      }\n    })();\n  }, [movieId]);\n  return (\n    <>\n      {actors && !!actors.length ? (\n        <ListCast>\n          {actors.map(({ id, profile_path, name }) => (\n            <ItemCast key={id}>\n              <Profile\n                src={profile_path ? baseImgUrl + profile_path : placeHolder}\n                alt={name}\n              />\n              <p>{name}</p>\n            </ItemCast>\n          ))}\n        </ListCast>\n      ) : (\n        <div>There is no information about the cast of the movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '3cf4425b2b0aaed10ba0111b9a0340c9';\n\nexport const fetchTrendingMovies = async () => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n\n  return resp.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return resp.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const resp = await axios.get(`movie/${id}?api_key=${apiKey}&language=en-US`);\n\n  return resp.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const resp = await axios.get(\n    `movie/${id}/credits?api_key=${apiKey}&language=en-US`\n  );\n\n  return resp.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const resp = await axios.get(\n    `movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n\n  return resp.data.results;\n};\n","export const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n"],"names":["ListCast","styled","ItemCast","Profile","useState","actors","setActors","movieId","useParams","useEffect","fetchMovieCredits","data","console","log","Error","length","map","id","profile_path","name","src","baseImgUrl","alt","axios","apiKey","fetchTrendingMovies","resp","results","fetchSearchMovie","query","fetchMovieDetails","cast","fetchMovieReviews"],"sourceRoot":""}