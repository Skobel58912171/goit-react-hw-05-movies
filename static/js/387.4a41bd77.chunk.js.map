{"version":3,"file":"static/js/387.4a41bd77.chunk.js","mappings":"oRAEMA,EAAaC,EAAAA,GAAAA,GAAH,mOAWVC,EAASD,EAAAA,GAAAA,EAAH,0E,SC0BZ,EAlCgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAEsBC,EAAAA,EAAAA,IAAkBH,GAFxC,OAESI,EAFT,OAIGL,EAAWK,GAJd,gDAMGC,QAAQC,IAAIC,OANf,wDAAD,EASD,GAAE,CAACP,KAGF,8BACGF,GAAaA,EAAQU,QACpB,SAACd,EAAD,UACGI,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,UAAChB,EAAD,sBAAiBe,MACjB,uBAAIC,MAFGF,EADE,OAQf,uEAIP,C,mMCnCDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAmB,mCAAG,oGACdF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD1B,cAC3BE,EAD2B,yBAG1BA,EAAKZ,KAAKa,SAHgB,2CAAH,qDAMnBC,EAAgB,mCAAG,WAAMC,GAAN,uFACXN,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCK,EADtC,gCADW,cACxBH,EADwB,yBAKvBA,EAAKZ,KAAKa,SALa,2CAAH,sDAQhBG,EAAiB,mCAAG,WAAMV,GAAN,uFACZG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,oBAAiCI,EAAjC,oBADY,cACzBE,EADyB,yBAGxBA,EAAKZ,MAHmB,2CAAH,sDAMjBiB,EAAiB,mCAAG,WAAMX,GAAN,uFACZG,EAAAA,EAAAA,IAAA,gBACRH,EADQ,4BACcI,EADd,oBADY,cACzBE,EADyB,yBAKxBA,EAAKZ,KAAKkB,MALc,2CAAH,sDAQjBnB,EAAiB,mCAAG,WAAMO,GAAN,uFACZG,EAAAA,EAAAA,IAAA,gBACRH,EADQ,4BACcI,EADd,2BADY,cACzBE,EADyB,yBAKxBA,EAAKZ,KAAKa,SALc,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst ListReview = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  list-style: none;\n  max-width: 1070px;\n  border: 2px solid #ccc8c8;\n  border-radius: 10px;\n  padding: 10px 20px;\n  text-align: justify;\n`;\nconst Author = styled.b`\n  display: inline-block;\n  margin-bottom: 10px;\n`;\n\nexport { ListReview, Author };\n","// import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/Api';\nimport { ListReview, Author } from './Reviews.styled';\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await fetchMovieReviews(movieId);\n\n        setReviews(data);\n      } catch {\n        console.log(Error);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && !!reviews.length ? (\n        <ListReview>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <Author>Author: {author}</Author>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ListReview>\n      ) : (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '3cf4425b2b0aaed10ba0111b9a0340c9';\n\nexport const fetchTrendingMovies = async () => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n\n  return resp.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return resp.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const resp = await axios.get(`movie/${id}?api_key=${apiKey}&language=en-US`);\n\n  return resp.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const resp = await axios.get(\n    `movie/${id}/credits?api_key=${apiKey}&language=en-US`\n  );\n\n  return resp.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const resp = await axios.get(\n    `movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n\n  return resp.data.results;\n};\n"],"names":["ListReview","styled","Author","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","data","console","log","Error","length","map","id","author","content","axios","apiKey","fetchTrendingMovies","resp","results","fetchSearchMovie","query","fetchMovieDetails","fetchMovieCredits","cast"],"sourceRoot":""}