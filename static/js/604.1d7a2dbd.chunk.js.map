{"version":3,"file":"static/js/604.1d7a2dbd.chunk.js","mappings":"wNAGaA,EAAOC,EAAAA,GAAAA,GAAH,kIAQJC,EAAOD,EAAAA,GAAAA,GAAH,kEAKJE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,6L,SCZTI,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAACR,EAAD,UACGM,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACR,EAAD,WACE,SAACC,EAAD,CAAWQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArD,SACGG,EAAMK,SAFAL,EAAME,GADF,OAUxB,C,gKCjBYI,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,OACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGd,ECiBD,EA3Ba,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeoB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGuBE,EAAAA,EAAAA,MAHvB,OAGUC,EAHV,OAKIL,EAAUK,GALd,gDAOIC,QAAQC,IAAIC,OAPhB,yBASIN,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAadO,EACD,GAAE,KAED,6BACE,2CACCR,GAAY,SAACX,EAAD,KAAa,SAAC,IAAD,CAAYV,OAAQA,MAGnD,C,mMC5BD8B,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFP,EAAmB,mCAAG,oGACdM,EAAAA,EAAAA,IAAA,qCAAwCC,IAD1B,cAC3BC,EAD2B,yBAG1BA,EAAKP,KAAKQ,SAHgB,2CAAH,qDAMnBC,EAAgB,mCAAG,WAAMC,GAAN,uFACXL,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCI,EADtC,gCADW,cACxBH,EADwB,yBAKvBA,EAAKP,KAAKQ,SALa,2CAAH,sDAQhBG,EAAiB,mCAAG,WAAM9B,GAAN,uFACZwB,EAAAA,EAAAA,IAAA,gBAAmBxB,EAAnB,oBAAiCyB,EAAjC,oBADY,cACzBC,EADyB,yBAGxBA,EAAKP,MAHmB,2CAAH,sDAMjBY,EAAiB,mCAAG,WAAM/B,GAAN,uFACZwB,EAAAA,EAAAA,IAAA,gBACRxB,EADQ,4BACcyB,EADd,oBADY,cACzBC,EADyB,yBAKxBA,EAAKP,KAAKa,MALc,2CAAH,sDAQjBC,EAAiB,mCAAG,WAAMjC,GAAN,uFACZwB,EAAAA,EAAAA,IAAA,gBACRxB,EADQ,4BACcyB,EADd,2BADY,cACzBC,EADyB,yBAKxBA,EAAKP,KAAKQ,SALc,2CAAH,qD","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MovieList.jsx","components/Loader.jsx","pages/Home.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  margin: 20px 0 0 20px;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  display: inline-block;\n  width: 100%;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  display: inline-block;\n  padding: 5px 16px;\n  color: black;\n  text-decoration: none;\n  border-radius: 4px;\n\n  :hover,\n  :focus {\n    color: #0000ff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, Item, MovieLink } from './MovieList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </MovieLink>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"blue\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MovieList';\nimport { fetchTrendingMovies } from 'services/Api';\nimport { Loader } from 'components/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrendingMovies();\n\n        setMovies(data);\n      } catch {\n        console.log(Error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovies();\n  }, []);\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {isLoading ? <Loader /> : <MoviesList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '3cf4425b2b0aaed10ba0111b9a0340c9';\n\nexport const fetchTrendingMovies = async () => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n\n  return resp.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return resp.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const resp = await axios.get(`movie/${id}?api_key=${apiKey}&language=en-US`);\n\n  return resp.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const resp = await axios.get(\n    `movie/${id}/credits?api_key=${apiKey}&language=en-US`\n  );\n\n  return resp.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const resp = await axios.get(\n    `movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n\n  return resp.data.results;\n};\n"],"names":["List","styled","Item","MovieLink","NavLink","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","useState","setMovies","isLoading","setIsLoading","useEffect","fetchTrendingMovies","data","console","log","Error","fetchMovies","axios","apiKey","resp","results","fetchSearchMovie","query","fetchMovieDetails","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}